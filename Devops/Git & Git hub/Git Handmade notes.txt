

  What is a Version Control System (VCS)?
   A Version Control System is a software tool that helps developers track and manage changes to source code or any files over time. 
   It allows you to:

    1. Save different versions of your project.
     
    2. Collaborate with others.
     
    3. Revert to previous versions if something breaks.
     
    4. See who made what changes and when.
	
	
	Issue version control system resolved are:
	
	 1. Sharing of code.
	 2. Versioning
	 
	
  Centrailized vs Decentralized
 
  Centralized: A centralized system is one where a single central authority (or unit) manages the entire system and controls all decisions,
               resources, and data processing.
			   
			   
  Decentralized: A decentralized system distributes control, processing, or decision-making across multiple independent or semi-autonomous units.



  What is fork?
  fork is a copy of repository that lives under your own user account. It allows you to freely modify the project without affecting 
  the original repository  
  
  What is Git and Git Hub?
  Git is a distributed version control system (DVCS) that helps you track changes in files, especially code. 
  It allows multiple developers to work on the same project without overwriting each other's changes.
  
  GitHub: GitHub is a web-based platform that hosts Git repositories online and adds collaboration tools on top. 
  Itâ€™s like a social network for code + cloud storage for your Git projects.
  
  Git commands:
  
  git init:                                Initialize a new Git repository
  git status:                              Show modified files and their state
  git add <file> or git add . :            Add a specific file to the staging area or Add all files to staging
  git commit -m "your message" :           Save your changes with a message.
  git log:                                 View commit history
  git diff :                               View differences between working files and staged files
  git push -u origin main                  Push it to Github repo
  git remote add                           To add git repo
  git clone                                To clone repo locally.
  git checkout -b <branch_name>            To create branch
  git branch                               To see all branches
  git checkout <Branch_name)               To switch between branches
  git log <branch_name>                    To see the logs of specific branch
  git cheery-pick <commit_id>              To merge the change or commit from any branch
  git log --oneline                        To check commit in oneline
  git merge <branch_name>                  To merge feature branch in main branch
  git rebase <branch_name>                 Re-apply commits from one branch onto another (like replaying them)  
  
  
  
  what is branch?
  A branch is essentially a separate line of development. It allows multiple developers to work on different 
  features or bug fixes without affecting the main codebase (often called the main or master branch).
  
  Advantages:
  1. Isolated Envirnament.
  2. Parallel Development.
  3. merge Later.
  
  Types of branching stratagy:
  
  1. Master or main branch
  2. Feature branch
  3. Release branch
  4. Hot fix branch
  
  
  when we initialize git then .git folder is created which is responsible for tracking changes.
  
  What is git workflow in your company?
    
	Pull Requests / Merge Requests
	
    After work is done on a branch:
    
    Push to remote.
    
    Open a PR (GitHub) / MR (GitLab).
    
    Code review by teammates.
    
    CI/CD pipelines run.
    
    Merge into develop or main after approval.
	
   Merging Strategy:
   
    Use git merge or squash and merge.

    Some teams prefer git rebase before merging to keep history clean.
	
	
	Git clone : Downloading Repo to local machine.
	
	Fork: Copying repo 
	
	
  To merge two branches we have three method:
  
  1. Git merge : merge two branch on top of it. if we want to track history not good way to merge.
  
  2. Git rebase: merge to branch and good way to track liner changes history.
  
  3. Git chery-pick : good way to merge any specific commit from other branch
  	
	
  
  Interview Questions:
  
  1. Is GIT a Distributed or Centralized version control system? What is the Difference?
     
	Git is a Distributed Version control system. each developer has a complete copy of the codebase including history, While in a 
	Centralized VCS, there's a single central repository.
	
	
  2. What are GIT commands that you use to commit changes to your remote repository?
   
    git add <file>
    git commit -m  "<message>"	
    git push origin <branch>
	
	
  3. Difference between git fetch and git push?

    git fetch : Download changes from remote but doesn't apply them.
    git push: upload your local commits to the remote repository.

  4. Difference between git merge and git rebase?
  
    Git merge : Combine branches and keeps history intect ( create a merge commit).
  
    Git rebase: moves commits from one branch onto another(rewrite history).
	
	
  5. What are pre-commit and post-commit hooks?
  
    Git hooks are scripts that run at specific points in Git's lifecycle.
       
      Pre-commits: Runs before a commit.
      post-commits: Runs after a commit. (e.g. sending a notifications)

  6.  what is a webhook?
      A webhooks is a way for an app (liek github) to send real-time data to another service (e.g. trigger CI/CD on push)

  7. How to pull and push changes to Git?
     git pull origin <branch>
     git push origin <branch>

   	 
  8. what is .git and .gitignore?
    
     .git: Hidden folder that tracks your repo (contains Git history and config)
  	 .gitignore: Specifies files/folders Git should not track.
	 
  9. How do you resolve a merge conflicts in Git?
      a. Git will mark the conflicted files.
      b. Open and edit to solve conflicts.
      c. after resolving  : git add . && git commit 

 10. what is git stash and its use cases?
    
     git stash: Temporarily saves uncommited changes.
	 
	   git stash                       #saves changes
	   git stash pop                   #apply and remove the stash
	   
	   use cases:  when switching branches without committing work-in-progress.
	   
 11. Difference between git clone and git fork ?
     
     git clone: Copies a repo to your local machine.
     
     git fork:  copies a repo to your github account (useful for contribution)

 12. how to amend a commit in Git?
      
     git commit --amend 
    
      - used to modify the most recent commit message or file.

 13. what is cheery-pick in Git?
 
     Git chery-pick <commit>: good way to merge any specific commit from other branch to another without merging the whole branch.
     
    	 
	 
    
	 
	 